# Generated by Django 5.1.4 on 2024-12-24 20:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('model', models.CharField(max_length=255, verbose_name='Модель')),
                ('manufacturer', models.CharField(max_length=255, verbose_name='Производитель')),
                ('serial_number', models.CharField(max_length=255, verbose_name='Серийный номер')),
                ('inventory_number', models.CharField(max_length=255, verbose_name='Инвентарный номер')),
                ('installation_date', models.DateField(verbose_name='Дата ввода в эксплуатацию')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Оборудование',
                'verbose_name_plural': 'Оборудование',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название типа обслуживания')),
                ('periodicity', models.IntegerField(verbose_name='Базовая периодичность (дни)')),
            ],
            options={
                'verbose_name': 'Тип обслуживания',
                'verbose_name_plural': 'Типы обслуживания',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planned_date', models.DateField(verbose_name='Запланированная дата')),
                ('actual_date', models.DateField(blank=True, null=True, verbose_name='Фактическая дата')),
                ('status', models.CharField(choices=[('scheduled', 'Запланировано'), ('completed', 'Выполнено'), ('overdue', 'Просрочено')], default='scheduled', max_length=20, verbose_name='Статус')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.equipment', verbose_name='Оборудование')),
                ('maintenance_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.maintenancetype', verbose_name='Тип обслуживания')),
            ],
            options={
                'verbose_name': 'График обслуживания',
                'verbose_name_plural': 'Графики обслуживания',
            },
        ),
        migrations.CreateModel(
            name='EquipmentMaintenanceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodicity', models.IntegerField(verbose_name='Индивидуальная периодичность (дни)')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.equipment', verbose_name='Оборудование')),
                ('maintenance_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.maintenancetype', verbose_name='Тип обслуживания')),
            ],
            options={
                'verbose_name': 'Периодичность обслуживания оборудования',
                'verbose_name_plural': 'Периодичности обслуживания оборудования',
                'unique_together': {('equipment', 'maintenance_type')},
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='maintenance_types',
            field=models.ManyToManyField(through='equipment.EquipmentMaintenanceType', to='equipment.maintenancetype', verbose_name='Типы обслуживания'),
        ),
    ]
